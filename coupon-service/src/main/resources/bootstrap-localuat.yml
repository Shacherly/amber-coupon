trading:
  confcenter:
    enabled: false

server:
  port: 10001
  shutdown: graceful
  servlet:
    context-path: /coupon
  tomcat:
    accept-count: 100
    max-connections: 8192
    threads:
      max: 200
      min-spare: 10

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      max-active: 10
      max-wait: 5000
      min-idle: 5
    # trading数据源
    primary:
      url: jdbc:postgresql://aws-jp-trading-allmodule-pg-nonprod.ckcvjkzxh8bd.ap-northeast-1.rds.amazonaws.com:5432/coupon_uat?prepareThreshold=0
      username: coupon_readwrite_uat
      password: liu0vsH#Ll8pzpTazohYM
      driver-class-name: org.postgresql.Driver
    # trading数据源
    trading-source:
      url: jdbc:postgresql://172.24.247.129:5432/trading?prepareThreshold=0
      username: readwrite
      password: .whn_E2D5*)z.h
      driver-class-name: org.postgresql.Driver

  redis:
    host: master.aws-jp-trading-allmodule-redis-nonprod2.8loycm.apne1.cache.amazonaws.com
    port: 6379
    password: eMIuCk#RykeeQ9Xc)UWC50
    lettuce:
      pool:
        min-idle: 0
        max-active: 8
        max-idle: 8
        max-wait: 5
        time-between-eviction-runs: 60000
    database: 11
    timeout: 5000

  kafka:
    bootstrap-servers: kafka001:9092,kafka002:9092,kafka003:9092
    consumer:
      group-id: trading-trading-coupon-local
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 0
#    properties:
#      security.protocol: SASL_SSL
#      sasl.mechanism: SCRAM-SHA-512
#      ssl.truststore.location: D:/Projects/trading/kafka.client.truststore.jks

mybatis:
  configuration:
    cache-enabled: false
  type-handlers-package: com.trading.backend.coupon.common.type
  mapper-locations: classpath:mapper/*.xml
mapper:
  mappers: com.trading.backend.common.mapper.BaseMapper
pagehelper:
  default-count: true

logging:
  config: classpath:log/log4j2-uat.xml

management:
  endpoints:
    web:
      exposure:
        include: health,info
  server: #prometheus单独端口监控
    port: 8040
    servlet:
      context-path: ${server.servlet.context-path}

topics:
  registry: trading-trading-coupon-registry-uat
  kyc: trading-trading-coupon-kyc-uat
  deposit: trading-trading-wallet-transaction-uat
  purchase: trading-trading-buycrypto-push-balance-uat
  earn: trading-trading-coupon-earn-uat
  valid-novice: trading-trading-coupon-validuser-uat
  user-touch: trading-trading-usercenter-usertouch-uat

remote-call:
  domain: 'https://internal-gateway-uat.tradingainsider.com'
  aceup:
    domain: 'https://aceup-uat.tradingainsider.com'
    key: 'trading'
    secret: 'af19e35f019eab4297435c04aed7b857217a486d'
    token-url: 'https://aceup-uat.tradingainsider.com/server/auth/oauth/token'

# 新手活动时间配置
novice-property:
  novice-stage: 3
  regist-coupon: '22,23,24'
  start-time: '2021-10-27T00:00:00'
  end-time: '2021-12-31T23:59:59'

coupon-alarm:
  url: 'https://alarm.tradingainsider.com/server/alarm_server/alarm_manager?method=on_alarm'
  quantity-remain:
    name: 'uat优惠券消耗数量告警'
  grant-celling1:
    name: 'uat资产券奖励发放每日上限告警'
  grant-celling2:
    name: 'uat资产券奖励发放暂停告警'

